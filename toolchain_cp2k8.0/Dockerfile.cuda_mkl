FROM nvidia/cuda:11.0-devel-ubuntu20.04
ARG GPU_VERSION
ARG LIBINT_LMAX=5

# author: Ole Schuett

# Installs toolchain with CUDA and MKL.
# WARNING: The resulting image will violate the GPL and must not be distributed.

# install Ubuntu packages.
COPY ./install_requirements_ubuntu.sh .
RUN ./install_requirements_ubuntu.sh

ENV LANG en_US.UTF-8

# Install some more Ubuntu packages.
RUN apt-get update -qq && apt-get install -qq --no-install-recommends \
    gfortran                                                          \
    mpich                                                             \
    libmpich-dev                                                      \
   && rm -rf /var/lib/apt/lists/*

# Setup CUDA environment.
ENV CUDA_PATH /usr/local/cuda
ENV LD_LIBRARY_PATH ${CUDA_PATH}/lib64:${LD_LIBRARY_PATH}

# Install Intel MKL.
# https://software.intel.com/en-us/articles/installing-intel-free-libs-and-python-apt-repo
RUN wget -q https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB -O- | apt-key add - && \
    echo 'deb https://apt.repos.intel.com/mkl all main' > /etc/apt/sources.list.d/intel-mkl.list && \
    apt-get update -qq && apt-get install -qq --no-install-recommends intel-mkl-64bit-2019.4-070 && \
    rm -rf /var/lib/apt/lists/*
ENV MKLROOT=/opt/intel/compilers_and_libraries/linux/mkl

# Build toolchain.
WORKDIR /opt/cp2k-toolchain
COPY ./scripts ./scripts
COPY ./install_cp2k_toolchain.sh .
RUN ./install_cp2k_toolchain.sh  \
    --mpi-mode=mpich             \
    --math-mode=mkl              \
    --with-reflapack=no          \
    --with-scalapack=no          \
    --with-elpa=no               \
    --libint-lmax=${LIBINT_LMAX} \
    --gpu-ver=${GPU_VERSION}     \
    && rm -rf ./build

#EOF
