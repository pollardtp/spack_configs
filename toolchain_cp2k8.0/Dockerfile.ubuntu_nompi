ARG BASE_IMAGE=ubuntu:20.04
FROM ${BASE_IMAGE}
ARG GCC_VERSION=9
ARG LIBINT_LMAX=5
USER root

# author: Ole Schuett

# Installs lean toolchain without MPI and relying mostly on Ubuntu packages.

# Install Ubuntu packages.
RUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true && \
    apt-get update -qq && apt-get install -qq --no-install-recommends \
    autoconf \
    autogen \
    automake \
    autotools-dev \
    ca-certificates \
    cmake \
    g++ \
    git \
    less \
    libtool \
    locales \
    make \
    nano \
    pkg-config \
    python \
    python3 \
    unzip \
    wget \
    zlib1g-dev \
    gcc-${GCC_VERSION} \
    g++-${GCC_VERSION} \
    gfortran-${GCC_VERSION} \
    fftw3-dev \
    libopenblas-dev \
    liblapack-dev \
    libgsl-dev \
    libhdf5-dev \
   && rm -rf /var/lib/apt/lists/*

# generate a unicode-enabled locale, see https://hub.docker.com/_/ubuntu?tab=description
RUN localedef -i C -c -f UTF-8 -A /usr/share/locale/locale.alias C.UTF-8
ENV LANG en_US.UTF-8

# Create links.
RUN ln -sf gcc-${GCC_VERSION}      /usr/bin/gcc  && \
    ln -sf g++-${GCC_VERSION}      /usr/bin/g++  && \
    ln -sf gfortran-${GCC_VERSION} /usr/bin/gfortran

# Build toolchain.
WORKDIR /opt/cp2k-toolchain
COPY ./scripts ./scripts
COPY ./install_cp2k_toolchain.sh .
RUN ./install_cp2k_toolchain.sh  \
    --mpi-mode=no                \
    --with-gcc=system            \
    --with-cmake=system          \
    --with-fftw=system           \
    --with-openblas=system       \
    --with-reflapack=system      \
    --with-gsl=system            \
    --with-hdf5=system           \
    --with-libxc=install         \
    --with-libxsmm=install       \
    --with-libint=install        \
    --libint-lmax=${LIBINT_LMAX} \
    && rm -rf ./build
